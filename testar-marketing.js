// Script para testar o sistema completo de marketing

import { marketingService, solicitacoesMarketingService, whitelistService } from './src/lib/services.js';

async function testarMarketing() {
  console.log('üé® Testando sistema completo de marketing...\n');
  
  try {
    // 1. Verificar se h√° VIPs cadastrados
    console.log('1Ô∏è‚É£ Verificando VIPs cadastrados...');
    const vips = await whitelistService.getAllVips();
    console.log(`‚úÖ Encontrados ${vips.length} VIPs cadastrados`);
    
    if (vips.length === 0) {
      console.log('‚ö†Ô∏è Nenhum VIP cadastrado. Adicionando VIPs de teste...');
      await whitelistService.addVip('+5511999999999', 'Jo√£o Silva', 'L√≠der', 'S√£o Paulo');
      await whitelistService.addVip('+5511888888888', 'Maria Santos', 'Coordenadora', 'Rio de Janeiro');
      console.log('‚úÖ VIPs de teste adicionados');
    }

    // 2. Adicionar servi√ßos de marketing de exemplo
    console.log('\n2Ô∏è‚É£ Adicionando servi√ßos de marketing de exemplo...');
    
    const servicosExemplo = [
      {
        nome: 'Cria√ß√£o de Logo',
        categoria: 'Identidade Visual',
        descricao: 'Cria√ß√£o de logomarca personalizada para campanha',
        tempo_estimado: '3-5 dias',
        custo_estimado: 500.00,
        fornecedor: 'Design Studio ABC',
        observacoes: 'Inclui 3 propostas e 2 revis√µes'
      },
      {
        nome: 'Posts para Instagram',
        categoria: 'Social Media',
        descricao: 'Cria√ß√£o de posts para redes sociais',
        tempo_estimado: '1-2 dias',
        custo_estimado: 150.00,
        fornecedor: 'Social Media Pro',
        observacoes: 'Pacote de 10 posts'
      },
      {
        nome: 'Banner para Evento',
        categoria: 'Design Gr√°fico',
        descricao: 'Banner personalizado para eventos de campanha',
        tempo_estimado: '2-3 dias',
        custo_estimado: 300.00,
        fornecedor: 'Print Express',
        observacoes: 'Inclui impress√£o em alta qualidade'
      },
      {
        nome: 'Identidade Visual Completa',
        categoria: 'Identidade Visual',
        descricao: 'Kit completo de identidade visual',
        tempo_estimado: '7-10 dias',
        custo_estimado: 1200.00,
        fornecedor: 'Brand Studio',
        observacoes: 'Logo, cores, tipografia e aplica√ß√µes'
      }
    ];

    for (const servico of servicosExemplo) {
      await marketingService.add(servico);
      console.log(`‚úÖ Servi√ßo adicionado: ${servico.nome}`);
    }

    // 3. Verificar servi√ßos cadastrados
    console.log('\n3Ô∏è‚É£ Verificando servi√ßos cadastrados...');
    const servicos = await marketingService.getAll();
    console.log(`‚úÖ Total de servi√ßos: ${servicos.length}`);

    // 4. Simular solicita√ß√µes de marketing
    console.log('\n4Ô∏è‚É£ Simulando solicita√ß√µes de marketing...');
    
    const solicitacoesExemplo = [
      {
        phone_number: '+5511999999999',
        nome_solicitante: 'Jo√£o Silva',
        municipio_solicitante: 'S√£o Paulo',
        servico_solicitado: 'Cria√ß√£o de Logo para campanha municipal',
        descricao_projeto: 'Preciso de uma logo moderna para a campanha de vereador. Cores: azul e branco. Deve transmitir confian√ßa e proximidade com o povo.',
        prazo_desejado: '2024-02-15',
        valor_estimado: 500.00,
        observacoes: 'Urgente para in√≠cio da campanha'
      },
      {
        phone_number: '+5511888888888',
        nome_solicitante: 'Maria Santos',
        municipio_solicitante: 'Rio de Janeiro',
        servico_solicitado: 'Posts para Instagram da campanha',
        descricao_projeto: 'S√©rie de posts para Instagram com foco em propostas e realiza√ß√µes. Tom mais informal e pr√≥ximo do eleitor.',
        prazo_desejado: '2024-02-10',
        valor_estimado: 300.00,
        observacoes: 'Incluir stories e reels'
      }
    ];

    for (const solicitacao of solicitacoesExemplo) {
      await solicitacoesMarketingService.add(solicitacao);
      console.log(`‚úÖ Solicita√ß√£o registrada: ${solicitacao.servico_solicitado}`);
    }

    // 5. Verificar solicita√ß√µes
    console.log('\n5Ô∏è‚É£ Verificando solicita√ß√µes...');
    const solicitacoes = await solicitacoesMarketingService.getAll();
    console.log(`‚úÖ Total de solicita√ß√µes: ${solicitacoes.length}`);

    // 6. Simular aprova√ß√£o de solicita√ß√£o
    console.log('\n6Ô∏è‚É£ Simulando aprova√ß√£o de solicita√ß√£o...');
    if (solicitacoes.length > 0) {
      const solicitacao = solicitacoes[0];
      
      const respostaCompleta = `Sua solicita√ß√£o de marketing foi aprovada com sucesso! O projeto est√° em desenvolvimento.

üìç Local de Coleta: Est√∫dio de Design - Rua das Artes, 456, Centro
üïê Hor√°rio: Segunda a sexta-feira, das 9h √†s 18h
üë§ Procurar por: Ana Designer (Coordenadora de Projetos)
üìÖ Data de Entrega: 2024-02-15

O designer entrar√° em contato em breve para alinhar os detalhes do projeto.`;

      await solicitacoesMarketingService.updateStatus(
        solicitacao.id, 
        'aprovada', 
        respostaCompleta, 
        500.00, // valor_final
        '2024-02-15' // data_entrega
      );

      console.log(`‚úÖ Solicita√ß√£o ${solicitacao.id} aprovada`);
      console.log(`üì± Notifica√ß√£o ser√° enviada para: ${solicitacao.phone_number}`);
    }

    // 7. Simular rejei√ß√£o de solicita√ß√£o
    console.log('\n7Ô∏è‚É£ Simulando rejei√ß√£o de solicita√ß√£o...');
    if (solicitacoes.length > 1) {
      const solicitacao = solicitacoes[1];
      
      const respostaRejeicao = `Infelizmente sua solicita√ß√£o n√£o p√¥de ser aprovada no momento.

Motivo: Prazo muito curto para o tipo de projeto solicitado.

Sugest√£o: Entre em contato conosco com pelo menos 2 semanas de anteced√™ncia para projetos de redes sociais.`;

      await solicitacoesMarketingService.updateStatus(
        solicitacao.id, 
        'rejeitada', 
        respostaRejeicao
      );

      console.log(`‚ùå Solicita√ß√£o ${solicitacao.id} rejeitada`);
      console.log(`üì± Notifica√ß√£o ser√° enviada para: ${solicitacao.phone_number}`);
    }

    // 8. Verificar estat√≠sticas
    console.log('\n8Ô∏è‚É£ Verificando estat√≠sticas...');
    const stats = await solicitacoesMarketingService.getStats();
    console.log('üìä Estat√≠sticas gerais:');
    console.log(`- Total de solicita√ß√µes: ${stats.total_solicitacoes}`);
    console.log(`- Pendentes: ${stats.solicitacoes_pendentes}`);
    console.log(`- Aprovadas: ${stats.solicitacoes_aprovadas}`);
    console.log(`- Rejeitadas: ${stats.solicitacoes_rejeitadas}`);
    console.log(`- Valor total estimado: R$ ${stats.valor_total_estimado}`);

    // 9. Verificar estat√≠sticas por l√≠der
    console.log('\n9Ô∏è‚É£ Verificando estat√≠sticas por l√≠der...');
    const statsPorLider = await solicitacoesMarketingService.getStatsPorLider();
    console.log('üìä Estat√≠sticas por l√≠der:');
    statsPorLider.forEach(lider => {
      console.log(`- ${lider.nome_solicitante} (${lider.municipio_solicitante}): ${lider.total_solicitacoes} solicita√ß√µes, R$ ${lider.valor_total_estimado}`);
    });

    // 10. Verificar estat√≠sticas por servi√ßo
    console.log('\nüîü Verificando estat√≠sticas por servi√ßo...');
    const statsPorServico = await solicitacoesMarketingService.getStatsPorServico();
    console.log('üìä Estat√≠sticas por servi√ßo:');
    statsPorServico.forEach(servico => {
      console.log(`- ${servico.servico_solicitado}: ${servico.total_solicitacoes} solicita√ß√µes, R$ ${servico.valor_total_estimado}`);
    });

    console.log('\n‚úÖ Teste de marketing conclu√≠do!');
    console.log('\nüìã Resumo do que foi testado:');
    console.log('- ‚úÖ Verifica√ß√£o de VIPs cadastrados');
    console.log('- ‚úÖ Adi√ß√£o de servi√ßos de marketing');
    console.log('- ‚úÖ Simula√ß√£o de solicita√ß√µes');
    console.log('- ‚úÖ Aprova√ß√£o de solicita√ß√£o');
    console.log('- ‚úÖ Rejei√ß√£o de solicita√ß√£o');
    console.log('- ‚úÖ Verifica√ß√£o de estat√≠sticas');
    console.log('- ‚úÖ Estat√≠sticas por l√≠der');
    console.log('- ‚úÖ Estat√≠sticas por servi√ßo');
    
    console.log('\nüé® PR√ìXIMOS PASSOS:');
    console.log('1. Inicie o bot com: node bot/index.js');
    console.log('2. O servi√ßo de notifica√ß√£o ir√° detectar as mudan√ßas automaticamente');
    console.log('3. As notifica√ß√µes de marketing ser√£o enviadas para os l√≠deres');
    console.log('4. Acesse /admin/marketing para gerenciar servi√ßos');
    console.log('5. Acesse /admin/solicitacoes-marketing para gerenciar solicita√ß√µes');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error);
  }
}

// Executar teste
testarMarketing();
